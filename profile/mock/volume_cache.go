// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/andreikurzhonkov/rabbix/bknd-go/profile/volume_cache.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	tsdb "github.com/strips-finance/rabbit-dex-backend/profile/tsdb"
)

// MockVolumeStore is a mock of VolumeStore interface.
type MockVolumeStore struct {
	ctrl     *gomock.Controller
	recorder *MockVolumeStoreMockRecorder
}

// MockVolumeStoreMockRecorder is the mock recorder for MockVolumeStore.
type MockVolumeStoreMockRecorder struct {
	mock *MockVolumeStore
}

// NewMockVolumeStore creates a new mock instance.
func NewMockVolumeStore(ctrl *gomock.Controller) *MockVolumeStore {
	mock := &MockVolumeStore{ctrl: ctrl}
	mock.recorder = &MockVolumeStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVolumeStore) EXPECT() *MockVolumeStoreMockRecorder {
	return m.recorder
}

// GetVolumesAggregatesLast30d mocks base method.
func (m *MockVolumeStore) GetVolumesAggregatesLast30d(arg0 context.Context) ([]tsdb.CumVolume, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVolumesAggregatesLast30d", arg0)
	ret0, _ := ret[0].([]tsdb.CumVolume)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVolumesAggregatesLast30d indicates an expected call of GetVolumesAggregatesLast30d.
func (mr *MockVolumeStoreMockRecorder) GetVolumesAggregatesLast30d(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVolumesAggregatesLast30d", reflect.TypeOf((*MockVolumeStore)(nil).GetVolumesAggregatesLast30d), arg0)
}
